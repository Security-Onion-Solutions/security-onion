#summary Using Salt for configuration management

= What is Salt? =

"Salt delivers a dynamic communication bus for infrastructures that can be used for orchestration, remote execution, configuration management and much more."

http://docs.saltstack.com/

= What is OnionSalt? =

"OnionSalt is a tool created to manage multiple Security Onion sensors."

https://github.com/TOoSmOotH/onionsalt

= Salt and OnionSalt are optional packages =

Please note that Salt is totally optional.  If you're happy with your current method of sensor management, then you don't have to install securityonion-onionsalt and nothing will change for you.  

= Warning =

Please be advised that our Salt integration is still considered experimental.

= Features =
When you install and enable securityonion-onionsalt, the following data will replicate from the master server out to the sensors every 15 minutes:

  * user accounts and sudoers in /opt/onionsalt/pillar/users/init.sls
  * user ssh keys in /opt/onionsalt/salt/users/keys/
  * NIDS rules in /etc/nsm/rules/ (Snort/Suricata/barnyard will restart as necessary)
  * HIDS rules in /var/ossec/rules/local_rules.xml (OSSEC will restart as necessary)
  * Bro scripts in /opt/bro/share/bro/policy/
    * Bro does not restart automatically, but you can do this easily with salt from your master server:
{{{
sudo salt '*' cmd.run 'sudo /opt/bro/bin/broctl install  && sudo /opt/bro/bin/broctl restart'
}}}

In addition, Salt is a full configuration management system, so you can script anything that you want to deploy across your army of sensors.

= Firewall Requirements =

Sensors need to be able to connect to the master server on ports 4505/tcp and 4506/tcp:

http://docs.saltstack.com/topics/tutorials/firewall.html

= Initial installation/configuration =

== New Deployments ==

Advanced Setup now asks if you want to enable Salt.  Simply answer "Yes" and it will configure salt-master and/or salt-minion services and open firewall ports as necessary.  Security Onion Masters run both salt-master and salt-minion whereas Security Onion sensors only run salt-minion.  To add users and SSH keys, skip to:
https://code.google.com/p/security-onion/wiki/Salt#Adding_Users_and_SSH_keys

== Salting an Existing Deployment ==

=== Configure the Master Server first ===

{{{
# Install securityonion-onionsalt (will also install salt-master, salt-minion, and their dependencies)
sudo apt-get update && sudo apt-get install securityonion-onionsalt

# Edit /opt/onionsalt/salt/top.sls and add your master as a "backend"

# Open salt ports in firewall:
# sudo ufw allow salt
# OR preferably just allow from your sensor IP addresses like this:
# sudo ufw allow proto tcp from a.b.c.d to any port 4505,4506
# Also see our Firewall page:
# https://code.google.com/p/security-onion/wiki/Firewall

# Configure minion
echo "master: localhost" | sudo tee -a /etc/salt/minion.d/onionsalt.conf

# Restart minion
sudo service salt-minion restart

# list the salt keys:
sudo salt-key -L

# You should see an unaccepted salt key for the minion, add it:
sudo salt-key -a '*'

# Verify that the master can communicate with the minion:
sudo salt '*' test.ping

# Tell salt to do an update
sudo salt '*' state.highstate
}}}

=== Now configure salt-minion on a Sensor ===
{{{
# Install securityonion-onionsalt (will also install salt-master, salt-minion, and their dependencies)
sudo apt-get update && sudo apt-get install securityonion-onionsalt

# Stop the running salt-master
sudo service salt-master stop

# Disable salt-master
[ -f /etc/init/salt-master.conf ] && sudo mv /etc/init/salt-master.conf /etc/init/salt-master.DISABLED

# Configure minion
MASTER=`grep SENSOR_SERVER_HOST /etc/nsm/*/sensor.conf |head -1 |cut -d\" -f2`
echo "master: $MASTER" | sudo tee -a /etc/salt/minion.d/onionsalt.conf

# Restart minion
sudo service salt-minion restart
}}}

=== Now return to the Master and accept the new minion ===
{{{
# Edit /opt/onionsalt/salt/top.sls and add the new minion as a "sensor"

# list the salt keys:
sudo salt-key -L

# You should see an unaccepted salt key for the sensor, add it:
sudo salt-key -a '*'

# Verify that the master can communicate with all minions:
sudo salt '*' test.ping

# Tell all minions to do an update
sudo salt '*' state.highstate
}}}

= Adding Users and SSH keys =

Add your user accounts to /opt/onionsalt/pillar/users/init.sls.  For each user account, you can add an SSH Public Key to /opt/onionsalt/salt/users/keys/USERNAME.id_rsa.pub (replacing USERNAME with the user's actual username).